library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
?mmmactive
??mmmactive
library(mmmactive)
library(mmmactive)
devtools::document()
devtools::document()
library(mmmactive)
library(mmmactive)
install.packages("styler")
library(styler)
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_selection()
styler:::style_active_file()
styler:::style_active_file()
is.null(priors)
styler:::style_active_file()
styler:::style_selection()
library(mmmactive)
styler:::style_active_file()
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
Sys.info()
library(mmmactive)
library(mmmactive)
library(mmmactive)
styler:::style_active_file()
library(mmmactive)
library(mmmactive)
devtools::document()
library(mmmactive)
library(mmmactive)
Load_Data
library(mmmactive)
library(mmmactive)
styler:::style_active_file()
devtools::document()
library(mmmactive)
media_mix_opt <- function(mod_obj, total_budget = NULL, incremental = 100000, interactive = FALSE) {
######### Need to generalize this path #########
RC <- mod_obj$ABClist
ABCs <- RC$ABCs[,-which(RC$ABCs[1,] < 1)]
multiplier <- pull(filter(mod_obj$Mtable, FiscalPeriod == "FY18"), MSRP)
#multiplier <- pull(filter(mod_obj$Mtable, FiscalPeriod == FiscalPeriod), MSRP)
# To avoid scientific notation
options("scipen" = 100, "digits" = 4)
df_orig <- ABCs %>%
t() %>%
as.data.frame() %>%
rownames_to_column("Channel") %>%
select(Channel, `Adjusted A`, B, C, Spend, mROI)
print("This is how the mROIs look with current Spend level")
show(df_orig)
df_opt <- df_orig %>%
select(Channel, `Adjusted A`, B, C) %>%
mutate(
Min = 1000000,
Max = 900000000
)
if(interactive == TRUE){
message("Enter Min-Max Constraints in $MMs for each channel as: Min Spend,Max Spend; Ex: 1,900")
for (i in seq(nrow(df_opt))) {
min_max <- readline(paste0(df_opt$Channel[i], ": \t"))
df_opt$Min[i] <- as.numeric(str_split_fixed(min_max, ",", 2)[1]) * 1000000
df_opt$Max[i] <- as.numeric(str_split_fixed(min_max, ",", 2)[2]) * 1000000
}
}
df_opt <- df_opt %>%
mutate(
Spend = Min,
mROI = (mapply(mmmlegacy::Reach, `Adjusted A`, B, C, Spend + 10000) * multiplier - mapply(mmmlegacy::Reach, `Adjusted A`, B, C, Spend) * multiplier) / 10000
)
######### Use DT to set these up! #########
# DT::renderDataTable({DT::datatable(df_opt, editable = T)})
# df_orig$Min <- 1*1000000
# df_orig$Max <- 5*1000000
rem_budget <- total_budget - sum(df_opt$Spend)
print("Optimising...")
while (rem_budget > incremental) {
df_opt <- df_opt[order(-df_opt$mROI), ]
if (df_opt$Spend[1] <= df_opt$Max[1] - incremental) {
df_opt$Spend[1] <- df_opt$Spend[1] + incremental
} else {
df_opt$mROI <- 0
}
df_opt <- df_opt %>%
mutate(mROI = (mapply(mmmlegacy::Reach, `Adjusted A`, B, C, Spend + 10000) * multiplier - mapply(mmmlegacy::Reach, `Adjusted A`, B, C, Spend) * multiplier) / 10000)
rem_budget <- total_budget - sum(df_opt$Spend)
}
# Adding left-over budget to the higher mROI channel
df_opt <- df_opt[order(-df_opt$mROI), ]
df_opt$Spend[1] <- df_opt$Spend[1] + rem_budget
rem_budget <- total_budget - sum(df_opt$Spend)
# print(rem_budget)
df_opt <- df_opt %>%
mutate(mROI = (mapply(mmmlegacy::Reach, `Adjusted A`, B, C, Spend + 10000) * multiplier - mapply(mmmlegacy::Reach, `Adjusted A`, B, C, Spend) * multiplier) / 10000)
print("Done")
mod_obj$mmo = list(df_orig = df_orig,
df_opt = df_opt[order(df_opt$Channel), ])
return(mod_obj)
}
library(mmmactive)
library(mmmactive)
library(mmmactive)
?devtools::install_gitlab()
library(mmmactive)
devtools::document()
devtools::document()
rm(list = c("media_mix_opt"))
devtools::document()
library(mmmactive)
library(mmmactive)
create_mod_obj()
mod_obj = create_mod_obj()
class(mod_obj)
create_mod_obj = function(){
mod_obj = list()
class(mod_obj) = c("list","msmp")
return(mod_obj)
}
mod_obj = create_mod_obj()
class(mod_obj)
validate_mod_obj = function(mod_obj){
return(class(mod_obj) == c("list","msmp"))
}
validate_mod_obj(mod_obj)
validate_mod_obj = function(mod_obj){
return(class(mod_obj) == c("msmp"))
}
validate_mod_obj(mod_obj)
validate_mod_obj = function(mod_obj){
return("msmp" %in% class(mod_obj))
}
validate_mod_obj(mod_obj)
devtools::document()
rm(list = c("create_mod_obj", "validate_mod_obj"))
devtools::document()
?Load_Data
devtools::document()
?Load_FMIData
?Load_Data
library(mmmactive)
?Load_Data
?Load_Data
devtools::document()
library(mmmactive)
?Load_Data
devtools::document()
library(mmmactive)
?Load_Data
devtools::document()
library(mmmactive)
?Load_Data
devtools::document()
library(mmmactive)
install.packages("styler")
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
library(car)
install.packages("car")
library(mmmactive)
install.packages("devtools")
devtools::document()
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
styler:::style_active_file()
devtools::document()
library(mmmactive)
library(mmmactive)
devtools::document()
library(mmmactive)
devtools::document()
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
is.activated
library(mmmactive)
library(mmmactive)
styler:::style_active_file()
devtools::document()
library(mmmactive)
library(mmmactive)
devtools::document()
?warning
is.activated <- function(x) {
if (!is.mod_obj(x)) {
stop("Input must be of class mod_obj.")
}
nms <- c("ModelForm", "Panel", "Time", "BeginDate", "EndDate", "SimStart", "SimEnd", "mroi_step", "cs", "kpi", "spec")
test <- sum(nms %in% attributes(mod_obj)$names) == 11
if(!test){
stop(paste(nms[!(nms %in% attributes(mod_obj)$names)],": missing element to activate mod_obj\n"))
}
return(test)
}
library(mmmactive)
devtools::document()
library(mmmactive)
devtools::document()
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
devtools::document()
library(mmmactive)
library(mmmactive)
library(mmmactive)
devtools::document()
devtools::document()
?mmmactive
devtools::use_vignette("my-vignette")
devtools::devtools::use_vignette("my-vignette")
devtools::use_vignette("my-vignette")
install.packages("rmarkdown")
install.packages("rmarkdown")
devtools::use_vignette("my-vignette")
?devtools::build_vignettes()
library(devtools)
use_vignette()
use_vignette("my_vignette")
document()
browseVignettes("mmmactive")
browseVignettes("mmmactive")
document()
library(mmmactive)
browseVignettes("mmmactive")
build_vignettes()
browseVignettes("mmmactive")
library(mmmactive)
browseVignettes("mmmactive")
document()
browseVignettes("mmmactive")
?mmmactive
?dplyr
browseVignettes(package = "dplyr")
document()
library(mmmactive)
browseVignettes(package = "mmmactive")
browseVignettes("mmmactive")
browseVignettes("mmmactive")
build_vignettes()
library(mmmactive)
browseVignettes("mmmactive")
devtools::build_vignettes()
library(mmmactive)
browseVignettes("mmmactive")
browseVignettes()
devtools::build_vignettes()
library(mmmactive)
browseVignettes("mmmactive")
\
]
devtools::build()
browseVignettes("mmmactive")
?mmmactive
?mmactive
?mmmactive
devtools::document()
?mmmactive
browseVignettes(package = "mmmactive")
browseVignettes(package = "mmmactive")
library(mmmactive)
browseVignettes(package = "mmmactive")
library(mmmactive)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(mmmactive)
browseVignettes(package = "mmmactive")
devtools::build_vignettes()
library(mmmactive)
browseVignettes(package = "mmmactive")
library(frammme)
frammme::nmp_dispatch()
frammme::nmp_dispatch
devtools::document()
library(mmmactive)
?mmmactive
devtools::document()
?mmmactive
?dplyr
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::build_vignettes()
library(mmmactive)
browseVignettes("mmmactive")
library(mmmactive)
browseVignettes("mmmactive")
library(mmmactive)
browseVignettes()
browseVignettes("mmmactive")
devtools::build_vignettes()
browseVignettes("mmmactive")
devtools::build()
browseVignettes("mmmactive")
library(mmmactive)
browseVignettes("mmmactive")
browseVignettes("mmmactive")
library(mmmactive)
detach("package:mmmactive", unload = TRUE)
library(mmmactive)
browseVignettes("mmmactive")
devtools::install(build_vignettes = TRUE)
browseVignettes("mmmactive")
browseVignettes("mmmactive")
library(mmmactive)
devtools::install(build_vignettes = TRUE)
browseVignettes("mmmactive")
devtools::install(build_vignettes = TRUE)
browseVignettes("mmmactive")
?mmmactive
library(mmmactive)
?mmmactive
devtools::document()
library(mmmactive)
?mmmactive
library(mmmactive)
?mmmactive
browseVignettes("mmmactive")
devtools::install(build_vignettes = TRUE)
browseVignettes("mmmactive")
??set_names
??collect
rlang
library(mmmactive)
library(mmmactive)
