data_vector_transformed =
TransformVar(data_vector = data_vector,
spec_row = transfromation_instruction,
fit_curves = mod_obj$fit_curves,
print = FALSE)
plot(data_vector, data_vector_transformed)
library(mmmactive)
devtools::document()
library(reshape2)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#library(tidyverse)
library(mmmactive)
input_file_ModelSetup =  here::here("data","ttn-ModelSetup.csv")
input_file_ModelSpec = here::here("data","ttn-ModelSpec.csv")
nmp <- "ttn"
rgn <- c("CR", "MAR", "MTN", "MWR", "NER", "NWR", "SER", "WR")
mod_obj <- create_mod_obj()
mod_obj <- mod_obj
mod_obj <- activate_model_setup(mod_obj, input_file_ModelSetup)
mod_obj <- activate_model_spec(mod_obj, input_file_ModelSpec)
mod_obj <- add_group_selector(mod_obj, vehicles = nmp, regions = rgn)
input_file_ModelData = here::here("data","ModelData.xlsx")
mod_obj <- Load_ModelData(mod_obj, input_file_ModelData)
input_file_FMIData = here::here("data","FMI.csv")
input_file_FMIData
FMI <-
read.csv(input_file_FMIData, stringsAsFactors = FALSE) %>%
dplyr::collect(n = Inf) %>%
dplyr::filter(region == "100") %>%
dplyr::filter(vehicle %in% c(
"alt", "arm", "fro", "lef", "max", "mur",
"nv", "pth", "rge", "sen", "ttn", "ver"
)) %>%
dplyr::mutate(week = ymd(week))
FMI
Ftable <-
reshape2::dcast(FMI, vehicle + week ~ var + type + tier,
value.var = "value",
fun.aggregate = sum
) %>% as.data.frame(.)
Ftable
head(Ftable)
FMI
?pivot_wider
FMI %>% pivot_wider(-c(vehicle, week), names_from = c(var, type, tier), values_from = value)
FMI
FMI %>% pivot_wider(-c(vehicle, week), names_from = c(var, type, tier), values_from = value)
FMI %>% select(vehicle, week, var, type, tier, value) %>%
pivot_wider(-c(vehicle, week), names_from = c(var, type, tier), values_from = value)
FMI %>% select(vehicle, week, var, type, tier, value) %>%
pivot_wider(names_from = c(var, type, tier), values_from = value)
FMI %>% select(vehicle, week, var, type, tier, value) %>%
pivot_wider(names_from = c(var, type, tier), values_from = value, values_fn = sum)
Ftable2 <- FMI %>%
select(vehicle, week, var, type, tier, value) %>%
pivot_wider(names_from = c(var, type, tier), values_from = value, values_fn = sum) %>%
as.data.frame()
Ftable <-
reshape2::dcast(FMI, vehicle + week ~ var + type + tier,
value.var = "value",
fun.aggregate = sum
) %>% as.data.frame(.)
dim(Ftable)
dim(Ftable2)
names(Ftable2)
names(Ftable)
head(Ftable )
str(Ftable )
str(Ftable2)
Ftable2 <- FMI %>%
select(vehicle, week, var, type, tier, value) %>%
pivot_wider(names_from = c(var, type, tier),
values_from = value,
values_fn = function(x) sum(x, na.rm = TRUE)) %>%
as.data.frame()
str(Ftable2)
Ftable2 <- FMI %>%
select(vehicle, week, var, type, tier, value) %>%
pivot_wider(names_from = c(var, type, tier),
values_from = value,
values_fn = function(x) sum(x, na.rm = TRUE),
values_fill = 0) %>%
as.data.frame()
Ftable2
str(Ftable2 )
str(Ftable)
identical(Ftable, Ftable2)
sort(Ftable)
names(Ftable)
sort(names(Ftable))
sort(names(Ftable2))
Ftable2[,sort(names(Ftable2))]
Ftable[,sort(names(Ftable2))]
Ftable[,sort(names(Ftable))]
identical(Ftable[,sort(names(Ftable))],Ftable[,sort(names(Ftable))])
identical(Ftable[,sort(names(Ftable))],Ftable2[,sort(names(Ftable))])
identical(Ftable[,sort(names(Ftable))],Ftable2[,sort(names(Ftable2))])
summary(Ftable)
summary(Ftable2)
?identical
all.equal(Ftable[,sort(names(Ftable))],Ftable2[,sort(names(Ftable2))])
Ftable$addressabletv_direct_t1
Ftable2$addressabletv_direct_t1
head(Ftable)
head(Ftable2)
Ftable[,sort(names(Ftable))]
arrange(Ftable[,sort(names(Ftable))], week)
arrange(Ftable[,sort(names(Ftable))], vehicle, week)
arrange(Ftable2[,sort(names(Ftable2))], vehicle, week)
identical(arrange(Ftable2[,sort(names(Ftable2))], vehicle, week), arrange(Ftable[,sort(names(Ftable))], vehicle, week))
library(mmmactive)
devtools::document()
devtools::document()
library(mmmactive)
?mmmactive
browseVignettes(package = "mmmactive"
)
purrr::map()
library(mmmactive)
?mmmactive
browseVignettes(package = "mmmactive")
devtools::install(build_vignettes = TRUE)
browseVignettes(package = "mmmactive")
?if_else
?dcast
devtools::document()
?model.matrix
?separate
library(tidyverse)
?separate
?vif
??vif
?full_join
?durbinWatsonTest
??durbinWatsonTest
shrinker
?shrinker
??shrinker
?funs
?rownames_to_column
devtools::document()
?spread
?lag
?as.formula
?‘:=’
??`:=`
?embed
?as.formula
?lag
myPoly
?rollmean
?cpt.meanvar
??cpt.meanvar
?complete.cases
?incremental_contributions
??incremental_contributions
styler:::style_active_file()
library(mmmactive)
devtools::document()
?embed
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(mmmactive)
nmp <- "ttn"
rgn <- c("CR", "MAR", "MTN", "MWR", "NER", "NWR", "SER", "WR")
input_file_ModelSetup =  here::here("data","ttn-ModelSetup.csv")
input_file_ModelSpec = here::here("data","ttn-ModelSpec.csv")
input_file_ModelData = here::here("data","ModelData.xlsx")
input_file_FMIData = here::here("data","FMI.csv")
input_file_MSRPData <- here::here("data","MSRPData.csv")
input_file_SpendData <- here::here("data","SpendData.csv")
input_FitCurves <- here::here("data","Fit_Curves.xlsx")
input_files = list(
input_file_ModelData = input_file_ModelData,
input_file_FMIData = input_file_FMIData,
input_file_SpendData = input_file_SpendData,
input_file_MSRPData = input_file_MSRPData
)
mod_obj <- create_mod_obj()
mod_obj <- activate_model_setup(mod_obj, input_file_ModelSetup)
mod_obj <- activate_model_spec(mod_obj, input_file_ModelSpec)
mod_obj <- add_group_selector(mod_obj, vehicles = nmp, regions = rgn)
mod_obj <- Load_Data(mod_obj, input_files)
mod_obj <- Load_FitCurves(mod_obj, input_FitCurves)
mod_obj <- Transform(mod_obj, print = FALSE)
is.data_transformed(mod_obj)
?set_colnames
?sym
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(mmmactive)
nmp <- "ttn"
rgn <- c("CR", "MAR", "MTN", "MWR", "NER", "NWR", "SER", "WR")
input_file_ModelSetup =  here::here("data","ttn-ModelSetup.csv")
input_file_ModelSpec = here::here("data","ttn-ModelSpec.csv")
input_file_ModelData = here::here("data","ModelData.xlsx")
input_file_FMIData = here::here("data","FMI.csv")
input_file_MSRPData <- here::here("data","MSRPData.csv")
input_file_SpendData <- here::here("data","SpendData.csv")
input_FitCurves <- here::here("data","Fit_Curves.xlsx")
input_files = list(
input_file_ModelData = input_file_ModelData,
input_file_FMIData = input_file_FMIData,
input_file_SpendData = input_file_SpendData,
input_file_MSRPData = input_file_MSRPData
)
Add_Dummy <- function(mod_obj) {
cs <- mod_obj$cs
ts <- mod_obj$Time
n_cols_before <- ncol(mod_obj$data)
mod_obj$data <-
mod_obj$data %>%
dplyr::mutate(
DUM_2017_11_01 = if_else(!!rlang::sym(ts) == "2017-11-01", 1, 0),
DUM_2018_01_01 = if_else(!!rlang::sym(ts) == "2018-01-01", 1, 0),
DUM_2017_05_01 = if_else(!!rlang::sym(ts) == "2017-05-01", 1, 0),
DUM_2018_03_01 = if_else(!!rlang::sym(ts) == "2018-03-01", 1, 0),
DUM_2018_09_01 = if_else(!!rlang::sym(ts) == "2018-09-01", 1, 0)
)
n_added_cols <- ncol(mod_obj$data) - n_cols_before
n_cols_after <- ncol(mod_obj$data)
added_dummy_cols <- names(mod_obj$data)[(n_cols_after - (n_added_cols - 1)):n_cols_after]
dummy_spec <-
data.frame(added_dummy_cols, added_dummy_cols, "Base", "Dummy", 1, "None", 0, 1) %>%
magrittr::set_colnames(names(mod_obj$spec)[c(1:6, 17:18)])
mod_obj$spec <-
dplyr::bind_rows(mod_obj$spec, dummy_spec)
return(mod_obj)
}
mod_obj <- create_mod_obj()
mod_obj <- activate_model_setup(mod_obj, input_file_ModelSetup)
mod_obj <- activate_model_spec(mod_obj, input_file_ModelSpec)
mod_obj <- add_group_selector(mod_obj, vehicles = nmp, regions = rgn)
mod_obj <- Load_Data(mod_obj, input_files)
mod_obj <- Load_FitCurves(mod_obj, input_FitCurves)
mod_obj <- Transform(mod_obj, print = FALSE)
mod_obj <- Set_Date_Range(mod_obj)
mod_obj <- Add_Dummy(mod_obj)
mod_obj <- Run_Model_Panel(mod_obj)
is.modeled(mod_obj)
?mmm_load_submodels
frammme::mmm_load_submodels
?mmm_load_submodel
frammme::mmm_load_submodel
devtools::document()
devtools::install(build_vignettes = TRUE)
devtools::install(build_vignettes = TRUE)
?if_else
library(mmmactive)
library(mmmactive)
?mmmactive
browseVignettes(package = "mmmactive")
browseVignettes(package = "mmmactive")
devtools::install(build_vignettes = TRUE)
browseVignettes(package = "mmmactive")
?vignette
vignette("Transform_vignette", "mmmactive")
vignette("LoadData_vignette", "mmmactive")
vignette("Load_Data_vignette", "mmmactive")
vignette("LoadingData_vignette", "mmmactive")
vignette("Modeling_vignette", "mmmactive")
vignette("mod_obj_class_vignette", "mmmactive")
devtools::document()
library(mmmactive)
browseVignettes(package = "mmmactive")
devtools::install(build_vignettes = TRUE)
browseVignettes(package = "mmmactive")
browseVignettes(package = "mmmactive")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(mmmactive)
nmp <- "ttn"
rgn <- c("CR", "MAR", "MTN", "MWR", "NER", "NWR", "SER", "WR")
input_file_ModelSetup =  here::here("data","ttn-ModelSetup.csv")
input_file_ModelSpec = here::here("data","ttn-ModelSpec.csv")
input_file_ModelData = here::here("data","ModelData.xlsx")
input_file_FMIData = here::here("data","FMI.csv")
input_file_MSRPData <- here::here("data","MSRPData.csv")
input_file_SpendData <- here::here("data","SpendData.csv")
input_FitCurves <- here::here("data","Fit_Curves.xlsx")
input_files = list(
input_file_ModelData = input_file_ModelData,
input_file_FMIData = input_file_FMIData,
input_file_SpendData = input_file_SpendData,
input_file_MSRPData = input_file_MSRPData
)
mod_obj <- create_mod_obj()
mod_obj <- activate_model_setup(mod_obj, input_file_ModelSetup)
mod_obj <- activate_model_spec(mod_obj, input_file_ModelSpec)
mod_obj <- add_group_selector(mod_obj, vehicles = nmp, regions = rgn)
mod_obj <- Load_Data(mod_obj, input_files)
mod_obj <- Load_FitCurves(mod_obj, input_FitCurves)
mod_obj <- Transform(mod_obj, print = FALSE)
is.data_transformed(mod_obj)
styler:::style_selection()
?floor_Date
?floor_date
??floor_date
?set_names
?as_tibble
??slice
devtools::document()
?cor
?rename
?desc
?seq_len
?dplyr::desc
?one_of
library(mmmactive)
?mmmactive
browseVignettes(package = "mmmactive")
devtools::install(build_vignettes = TRUE)
browseVignettes(package = "mmmactive")
?dplyr::lag
library(mmmactive)
mmmactive::TransformVar
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
styler:::style_active_file()
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
data.frame()
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
eq_lm
car::vif(mod_obj$lmModel)
library(mmmactive)
library(mmmactive)
Run_Model
library(mmmactive)
library(mmmactive)
x
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
is.modeled(mod_obj)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
detach("package:mmmactive", unload = TRUE)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
solve_abc
solve_abc
solve_abc = function(reach){
dummy <- tribble(
~term, ~estimate, ~std.error, ~statistic, ~p.value,
"a", 0, 0, 0, 0,
"b", 0, 0, 0, 0,
"c", 0, 0, 0, 0
)
model <- try(onls::onls(
Contribution ~ a / (1 + b * ((Spend / 1000))^c),
start = list(a = 80, b = 1, c = -1),
data = reach,
lower = c(a = 0.1, b = 0.1, c = -2)
))
m <- broom::tidy(model)
return(m)
}
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
?warning
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
source('~/.active-rstudio-document', echo=TRUE)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
library(mmmactive)
Unnest
Unnest <- function(sales_mod_obj, sub_mod_obj){
if(is.null(sales_mod_obj$DecompUnnested)){
salesmodel_contributions = sales_mod_obj$Decomp$decomposition_matrix
}else{
salesmodel_contributions = sales_mod_obj$DecompUnnested$unneseted_decomposition_matrix
}
submodel_contributions = sub_mod_obj$Decomp$decomposition_matrix
nmp = sales_mod_obj$nmp
salesmodel_response_var <- sales_mod_obj$spec %>%
dplyr::filter(Variable_Type == "Dependent") %>%
dplyr::pull(Trans_Variable)
#Contributions from this variable from in the salesmodel will be unnested
submodel_response_var <- sub_mod_obj$spec %>%
dplyr::filter(Variable_Type == "Dependent") %>%
dplyr::pull(Trans_Variable)
if(submodel_response_var %in% names(salesmodel_contributions)){
message(str_c("Unnesting ", submodel_response_var, " variable"))
}else{
stop(str_c(submodel_response_var, " not found in the sales model contribution matrix"))
}
if(is.null(sales_mod_obj$DecompUnnested$unnested_variables)){
unnested_variables_list = c(submodel_response_var)
}else{
unnested_variables_list = c(unnested_variables_list, submodel_response_var)
}
contributions_to_unnest = salesmodel_contributions[,submodel_response_var][[1]]
if(sum(!(contributions_to_unnest >= 0)) > 0){
stop(str_c(submodel_response_var, " is not >= 0 everywhere. Can only unnest positive variabels."))
}
#Contributions from these variables in the submodel will be distrubuted into the unnested variable
submodel_unnest_vars = sub_mod_obj$spec[sub_mod_obj$spec$Variable_Type %in% c("Marketing","Trend") & sub_mod_obj$spec$Orig_Variable != "Intercept","Trans_Variable"][[1]]
to_distribute = submodel_contributions[submodel_contributions$nameplate == nmp, names(submodel_contributions) %in% c(submodel_unnest_vars)]
to_distribute_pct = to_distribute/rowSums(to_distribute)
names(to_distribute_pct) = str_c(sub_mod_obj$kpi, "_sub_",names(to_distribute_pct))
to_distribute_pct = cbind(submodel_contributions[submodel_contributions$nameplate == nmp, names(submodel_contributions) %in% c(sub_mod_obj$Time)],to_distribute_pct)
to_unneset = salesmodel_contributions %>% select(!!sym(sales_mod_obj$cs), !!sym(sales_mod_obj$Time)) %>% left_join(to_distribute_pct)
unneseted_contributions = to_unneset[,-c(1,2)] * contributions_to_unnest
unneseted_contributions = cbind(to_unneset[,c(1,2)], unneseted_contributions)
unneseted_decomp_matrix =
salesmodel_contributions %>%
select(-!!sym(submodel_response_var)) %>%
left_join(unneseted_contributions)
unneseted_decomposition_table <-
unneseted_decomp_matrix %>%
select(-c(!!sym(salesmodel_response_var), pred, means_by, fitted, residuals)) %>%
pivot_longer(-c(!!sym(sales_mod_obj$cs), !!sym(sales_mod_obj$Time), !!sym(sales_mod_obj$kpi), sales, sales_tiv), names_to = "variable", values_to = "contribution")
submodel_categorization = sub_mod_obj$spec[,c("Trans_Variable","AggregateVariable","Variable_Type")]
submodel_categorization$Trans_Variable = str_c(sub_mod_obj$kpi, "_sub_", submodel_categorization$Trans_Variable)
submodel_categorization$Source_Model = sub_mod_obj$kpi
salesmodel_categorization = sales_mod_obj$spec[,c("Trans_Variable","AggregateVariable","Variable_Type")]
salesmodel_categorization$Source_Model = sales_mod_obj$kpi
categorization =
bind_rows(salesmodel_categorization,
submodel_categorization)
unneseted_decomposition_table_categorized =
unneseted_decomposition_table %>%
left_join(categorization, by = c("variable" = "Trans_Variable")) %>%
replace_na(list("AggregateVariable" = "Base", "Variable_Type" = "Trend", "Source_Model" = sales_mod_obj$kpi))
sales_mod_obj$DecompUnnested = list(
unneseted_decomposition_matrix = unneseted_decomp_matrix,
unneseted_decomposition_table = unneseted_decomposition_table_categorized,
unnested_variables = unnested_variables_list
)
return(sales_mod_obj)
}
library(mmmactive)
library(mmmactive)
